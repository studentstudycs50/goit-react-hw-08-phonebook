{"version":3,"sources":["pages/SignIn/Login.js","pages/SignIn/SignInPage.js","pages/SignIn/SignInStyled.js","component/Notification/NotificationStyled.js","component/Notification/Notification.js"],"names":["initialState","email","password","Login","dispatch","useDispatch","useState","state","setState","error","useSelector","getError","notification","setNotification","showNotification","setShowNotification","onHandleChange","event","target","name","value","prev","SignInStyled","CSSTransition","in","timeout","unmountOnExit","Notification","className","onSubmit","preventDefault","setTimeout","showNotificationAlert","signInOperation","type","placeholder","onChange","LoginPage","Wrapper","styled","div","NotificationStyled"],"mappings":"8MAQMA,EAAe,CACjBC,MAAO,GACPC,SAAU,IA8DCC,EA3DD,WAEV,IAAMC,EAAWC,cAFD,EAGUC,mBAAS,eAAKN,IAHxB,mBAGTO,EAHS,KAGFC,EAHE,KAIVC,EAAQC,YAAYC,KAJV,EAKwBL,mBAAS,IALjC,mBAKTM,EALS,KAKKC,EALL,OAMgCP,oBAAS,GANzC,mBAMTQ,EANS,KAMSC,EANT,KAmBVC,EAAiB,SAAAC,GAAU,IAAD,EACJA,EAAMC,OAAtBC,EADoB,EACpBA,KAAMC,EADc,EACdA,MACdZ,GAAS,SAACa,GAAD,mBAAC,eAAaA,GAAd,kBAAqBF,EAAOC,QAezC,OACI,eAACE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAeC,GAAIV,EAAkBW,QAAS,IAAKC,eAAa,EAAhE,SACI,cAACC,EAAA,EAAD,CAAcf,aAAcA,MAEhC,oBAAIgB,UAAU,cAAd,oBACA,uBAAMC,SAlBS,SAAAZ,GACnBA,EAAMa,iBAEQ,MAAVrB,IAnBsB,SAACG,GAChCC,EAAgBD,GAChBG,GAAoB,GACpBgB,YAAW,WACThB,GAAoB,KACnB,KACFgB,YAAW,WACVlB,EAAgB,MACf,MAYMmB,CAAsB,2BACtBxB,EAASR,KAETI,EAAS6B,YAAgB1B,IACzBC,EAASR,KAUuB4B,UAAU,aAA1C,UACI,wBAAOA,UAAU,cAAjB,kBAEI,uBAAOA,UAAU,cAAcM,KAAK,OAAOf,KAAK,QAAQgB,YAAY,gBAAgBf,MAAOb,EAAMN,MAAOmC,SAAUpB,OAGrH,wBAAOY,UAAU,cAAjB,qBAEG,uBAAOA,UAAU,cAAcM,KAAK,OAAOf,KAAK,WAAWgB,YAAY,mBAAmBf,MAAOb,EAAML,SAAUkC,SAAUpB,OAG/H,wBAAQY,UAAU,SAASM,KAAK,SAAhC,0BCxDDG,UAPG,WACd,OACI,mCACI,cAAC,EAAD,Q,8CCJNC,E,MAAUC,EAAOC,IAAV,2/CAyEEF,O,mDC1DAG,E,MAhBYF,EAAOC,IAAV,+T,OCUTb,IARM,SAAC,GAAsB,IAApBf,EAAmB,EAAnBA,aACtB,OACE,cAAC,EAAD,UACE,mBAAGgB,UAAU,qBAAb,SAAmChB","file":"static/js/SignInPage.0ef3c8da.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { signInOperation } from \"../../redux/operations/authOperatins\";\r\nimport { getError } from \"../../redux/selectors/authSelectors\";\r\nimport Notification from \"../../component/Notification/Notification\";\r\nimport SignInStyled from './SignInStyled';\r\n\r\nconst initialState = {\r\n    email: \"\",\r\n    password: \"\",\r\n}\r\n\r\nconst Login = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [state, setState] = useState({ ...initialState });\r\n    const error = useSelector(getError);\r\n    const [notification, setNotification] = useState(\"\");\r\n    const [showNotification, setShowNotification] = useState(false)\r\n    \r\n    const showNotificationAlert = (notification) => {\r\n   setNotification(notification);\r\n   setShowNotification(true);\r\n   setTimeout(() => {\r\n     setShowNotification(false);\r\n   }, 2000)\r\n    setTimeout(() => {\r\n     setNotification(\"\");\r\n   }, 2500)\r\n    }\r\n    \r\n    const onHandleChange = event => {\r\n        const { name, value } = event.target;\r\n        setState((prev) =>({...prev, [name]: value}))\r\n    }\r\n\r\n    const onHandleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (error === 400) {\r\n            showNotificationAlert('Wrong password or email');\r\n            setState(initialState)\r\n        } else {\r\n            dispatch(signInOperation(state))\r\n            setState(initialState)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <SignInStyled>\r\n            <CSSTransition in={showNotification} timeout={250} unmountOnExit>\r\n                <Notification notification={notification}/>\r\n            </CSSTransition>\r\n            <h2 className=\"login-title\">Log In</h2>\r\n            <form onSubmit={onHandleSubmit} className=\"login-form\">\r\n                <label className=\"login-label\">\r\n                    Email\r\n                    <input className=\"login-input\" type=\"text\" name=\"email\" placeholder=\"Writing email\" value={state.email} onChange={onHandleChange}/>\r\n                </label>\r\n\r\n                 <label className=\"login-label\">\r\n                    Password\r\n                    <input className=\"login-input\" type=\"text\" name=\"password\" placeholder=\"Writing password\" value={state.password} onChange={onHandleChange}/>\r\n                </label>\r\n\r\n                <button className=\"button\" type=\"submit\">Login</button>\r\n            </form>\r\n        </SignInStyled>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport Login from \"./Login\";\r\n\r\nconst LoginPage = () => {\r\n    return (\r\n        <>\r\n            <Login/>\r\n        </>\r\n    )\r\n}\r\nexport default LoginPage\r\n\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\ndisplay: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  overflow: hidden;\r\n  padding: 50px;\r\n  width: 432px;\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  margin: 20px auto;\r\n  box-shadow: 7px 5px 7px 5px rgba(140, 140, 140, 0.75);\r\n  .login-title{\r\n    font-weight: 700;\r\n    text-align: center;\r\n    font-size: 25px;\r\n    line-height: 1.63; \r\n    color: black;\r\n  }\r\n  .login-form{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .login-label{\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    line-height: 1.63;\r\n    color: black;\r\n  }\r\n  .login-input{\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 1.63;\r\n    color: black;\r\n    width: 400px;\r\n    border: 1px solid #696969;\r\n    border-radius: 4px;\r\n    padding: 10px 15px;\r\n    margin-top: 5px;\r\n    margin-bottom: 20px;\r\n  }\r\n  .button{\r\ndisplay: inline-block;\r\n    font-weight: 500;\r\n    font-size: 15px;\r\n    line-height: 1.63;\r\n    color: white;\r\n    width: 100px;\r\n    padding: 7px 10px;\r\n    background-color: blue;\r\n    cursor: pointer;\r\n    border: none;\r\n    border-radius: 4px;\r\n    outline: none;\r\n    margin-bottom: 20px;\r\n    margin-top: 20px;\r\n    margin-left: 20px;\r\n    cursor: pointer;\r\n    border: none;\r\n    outline: none;\r\n}\r\n.button:hover{\r\n    color: #fff;\r\n    background-color: black;\r\n    box-shadow: 7px 7px 12px 3px rgba(0, 0, 0, 0.42);\r\n    transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    \r\n}\r\n`\r\n\r\n\r\nexport default Wrapper;","import styled from \"styled-components\";\r\nconst NotificationStyled = styled.div`\r\n  position: absolute;\r\n  top: 45px;\r\n  right: 45px;\r\n  max-width: 300px;\r\n  background-color: red;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  .notification-title {\r\n    text-align: center;\r\n    font-weight: 400;\r\n    font-size: 18px;\r\n    line-height: 1.63;\r\n    color: #ffffff;\r\n  }\r\n`;\r\nexport default NotificationStyled;","import React from \"react\";\r\nimport NotificationStyled from \"../Notification/NotificationStyled\";\r\n\r\nconst Notification = ({ notification }) => {\r\n  return (\r\n    <NotificationStyled>\r\n      <p className=\"notification-title\">{notification}</p>\r\n    </NotificationStyled>\r\n  );\r\n};\r\n\r\nexport default Notification;"],"sourceRoot":""}