{"version":3,"sources":["component/ContactForm/ContactFormStyled.js","redux/selectors/formSelectors.js","component/ContactForm/ContactForm.js","redux/operations/contactOperations.js","component/Filter/FilterStyled.js","component/Filter/Filter.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","component/ContactListItem/ContactListItem.js","component/ContactList/ContactListStyled.js","component/ContactList/ContactList.js","component/App/AppStyled.js","pages/ContactsPage/ContactsPage.js","component/Notification/NotificationStyled.js","component/Notification/Notification.js"],"names":["Wrapper","styled","div","getContacts","state","form","contacts","getFilter","filter","getFilteredContacts","createSelector","item","name","toLowerCase","includes","initialState","number","ContactForm","dispatch","useDispatch","useSelector","useState","setState","notification","setNotification","showNotification","setShowNotification","onHandleChange","event","target","value","prev","showNotificationAlert","setTimeout","CSSTransition","in","timeout","classNames","unmountOnExit","Notification","className","onSubmit","preventDefault","some","length","contact","getState","a","addNewContactRequest","localId","auth","idToken","console","log","axios","post","process","response","addNewContactSuccess","id","data","addNewContactError","type","onChange","Filter","FilterStyled","placeholder","setFilter","getChildMapping","children","mapFn","result","Object","create","Children","map","c","forEach","child","key","isValidElement","mapper","getProp","prop","props","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","cloneElement","bind","exit","enter","values","obj","k","TransitionGroup","_React$Component","context","_this","handleExited","call","this","self","ReferenceError","_assertThisInitialized","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","_extends","render","_this$props","Component","component","childFactory","_objectWithoutPropertiesLoose","React","createElement","TransitionGroupContext","Provider","propTypes","defaultProps","ContactListItem","data-id","onClick","dataset","deleteContactRequest","delete","then","deleteContactSuccess","error","deleteContactError","deleteContactOperation","ContactList","useEffect","getContactsRequest","get","getContactsSuccess","getContactsError","ContactListStyled","Wraper","ContactPage","NotificationStyled"],"mappings":"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","file":"static/js/ContactsPage.7c280ae8.chunk.js","sourcesContent":["  \r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n.title-form\r\n{\r\ndisplay: flex;\r\n    flex-direction: column;\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    line-height: 1.63;\r\n    color: black;\r\n    margin-bottom: 20px;\r\n}\r\n.input-form{\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 1.63;\r\n    color: black;\r\n    width: 400px;\r\n    border: 1px solid #696969;\r\n    border-radius: 4px;\r\n    padding: 10px 15px;\r\n    margin-top: 5px;\r\n}\r\n.button{\r\ndisplay: inline-block;\r\n    font-weight: 500;\r\n    font-size: 15px;\r\n    line-height: 1.63;\r\n    color: white;\r\n    width: 100px;\r\n    padding: 7px 10px;\r\n    background-color: blue;\r\n    cursor: pointer;\r\n    border: none;\r\n    border-radius: 4px;\r\n    outline: none;\r\n}\r\n.button:hover{\r\n    color: #fff;\r\n    background-color: black;\r\n    box-shadow: 7px 7px 12px 3px rgba(0, 0, 0, 0.42);\r\n    transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n`;\r\n\r\nexport default Wrapper;","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getContacts = (state) => state.form.contacts;\r\n\r\nconst getFilter = (state) => state.form.filter;\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter((item) =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n);\r\nconst loading = (state) => state.form.isLoading;\r\n\r\nexport { getContacts, getFilter, getFilteredContacts, loading };","import React, { useState } from \"react\";\r\nimport ContFormStyled from \"../ContactForm/ContactFormStyled\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Notification from '../Notification/Notification'\r\n\r\nimport { getContacts } from \"../../redux/selectors/formSelectors\";\r\nimport { addNewContactOperation } from \"../../redux/operations/contactOperations\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst ContactForm = () => {\r\n  const dispatch = useDispatch()\r\n  const contacts = useSelector(getContacts)\r\n\r\n  const [state, setState] = useState({...initialState})\r\n  const [notification, setNotification] = useState(\"\");\r\n  const [showNotification, setShowNotification] = useState(false);\r\n\r\n  const  onHandleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setState((prev) =>({ ...prev, [name]: value }));\r\n  };\r\n\r\nconst showNotificationAlert = (notification) => {\r\n   setNotification(notification);\r\n   setShowNotification(true);\r\n   setTimeout(() => {\r\n     setShowNotification(false);\r\n   }, 2000)\r\n    setTimeout(() => {\r\n     setNotification(\"\");\r\n   }, 2500)\r\n  }\r\n\r\n  \r\n  const onHandleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (contacts.some((item) => item.name === state.name)) {\r\n      showNotificationAlert(`${state.name} is already in contacts`);\r\n      setState({ ...initialState });\r\n      return;\r\n    }\r\n    if (contacts.some((item) => item.number === state.number)) {\r\n      showNotificationAlert(`Contact with number ${state.number} is already in contacts`);\r\n      setState({ ...initialState });\r\n      return;\r\n    }\r\n    if (!state.name.length) {\r\n      showNotificationAlert(\"Please, enter a name\");\r\n      setState({ ...initialState });\r\n      return;\r\n    }\r\n    if (!state.number.length) {\r\n      showNotificationAlert(\"Please, enter a number\");\r\n      setState({ ...initialState });\r\n      return;\r\n    }\r\n    \r\n    dispatch(addNewContactOperation(state));\r\n    setState({ ...initialState });\r\n  };\r\n  \r\n  \r\n      return (\r\n        <ContFormStyled>\r\n\r\n        <CSSTransition in={showNotification} timeout={250} classNames=\"notification\" unmountOnExit>\r\n          <Notification notification={notification}/>\r\n          </CSSTransition>\r\n          \r\n          <form className=\"contForm\" onSubmit={onHandleSubmit}>\r\n            <label className=\"title-form\">\r\n              Name\r\n              <input type=\"text\" value={state.name} name=\"name\" onChange={onHandleChange} className=\"input-form\" />\r\n            </label>\r\n            <label className=\"title-form\">\r\n              Number\r\n              <input type=\"text\" value={state.number} name=\"number\" onChange={onHandleChange} className=\"input-form\" />\r\n            </label>\r\n            <button type=\"submit\" className=\"button\">\r\n              Add contact\r\n            </button>\r\n          </form>\r\n        </ContFormStyled>\r\n      );\r\n}\r\n\r\n\r\n\r\nexport default ContactForm;","import axios from \"axios\"\r\n\r\nimport { addNewContactRequest,\r\n  addNewContactSuccess,\r\n  addNewContactError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError} from \"../actions/formActions\"\r\n\r\n\r\nconst addNewContactOperation = (contact) => async (dispatch, getState) => {\r\n    dispatch(addNewContactRequest());\r\n\r\n    const localId = getState().auth.localId;\r\n    const idToken = getState().auth.idToken;\r\n    console.log(localId);\r\n    console.log(idToken);\r\n\r\n    try { \r\n        const response = await axios.post(`${process.env.REACT_APP_BASE_URL}/${localId}/contacts.json?auth=${idToken}`, contact)\r\n        dispatch(addNewContactSuccess({ ...contact, id: response.data.name }))\r\n    } catch (error) {\r\n        dispatch (addNewContactError(error))\r\n    }    \r\n}\r\n\r\nconst getContactOperation = () => async (dispatch, getState) => {\r\n    dispatch(getContactsRequest());\r\n\r\n    const localId = getState().auth.localId;\r\n    const idToken = getState().auth.idToken;\r\n\r\n    try {\r\n        const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/${localId}/contacts.json?auth=${idToken}`)\r\n    \r\n        const contacts = response.data ?\r\n            Object.keys(response.data).map((key) => ({\r\n                ...response.data[key],\r\n                id: key\r\n            })) : [];\r\n        dispatch(getContactsSuccess(contacts))\r\n    } catch (error) {\r\n        dispatch(getContactsError(error))\r\n    }\r\n}\r\n\r\nconst deleteContactOperation = (id) => (dispatch, getState) => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    const localId = getState().auth.localId;\r\n    const idToken = getState().auth.idToken;\r\n\r\n    try {\r\n        axios \r\n            .delete(`${process.env.REACT_APP_BASE_URL}/${localId}/contacts/${id}.json?auth=${idToken}`)\r\n            .then(()=>dispatch(deleteContactSuccess(id)))\r\n    } catch (error) {\r\n        dispatch(deleteContactError(error))\r\n    } \r\n}\r\n\r\nexport{addNewContactOperation, getContactOperation, deleteContactOperation}","import styled from 'styled-components';\r\nconst Wrapper = styled.div`\r\nposition: relative;\r\n.filter-title{\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-weight: 500;\r\n    font-size: 18px;\r\n    line-height: 1.63;\r\n    color: black;\r\n}\r\n.filter-input{\r\n    font-weight: 400;\r\n    font-size: 16px;\r\n    line-height: 1.63;\r\n    color: black;\r\n    width: 400px;\r\n    border: 1px solid #696969;\r\n    border-radius: 4px;\r\n    padding: 5px 15px;\r\n    margin-top: 5px;\r\n}\r\n`;\r\n\r\nexport default Wrapper","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FilterStyled from '../Filter/FilterStyled';\r\n\r\nimport { getFilter } from \"../../redux/selectors/formSelectors\";\r\nimport { setFilter } from \"../../redux/actions/formActions\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter)\r\n\r\n  const onChangeFilter = event => {\r\n    const { value } = event.target;\r\n    dispatch(setFilter(value))\r\n  }\r\n\r\n  return (\r\n      <FilterStyled>\r\n        <label className=\"filter-title\">\r\n          Find contact by name\r\n          <input type=\"text\" name=\"filter\" value={filter}  placeholder=\"Start writing name\" onChange={onChangeFilter} className=\"filter-input\"\r\n          />\r\n        </label>\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Filter;","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/actions/formActions\";\r\n\r\nimport { deleteContactOperation } from \"../../redux/operations/contactOperations\";\r\nimport { getFilter, getFilteredContacts } from \"../../redux/selectors/formSelectors\";\r\n\r\nconst ContactListItem = ({ contact}) => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const filter = useSelector(getFilter)\r\n\r\n  const onHandleDelete = (event) => {\r\n    const { id } = event.target.dataset;\r\n    dispatch(deleteContactOperation(id))\r\n    \r\n     if (contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase())).length < 2) {\r\n       dispatch(setFilter(''));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <li className=\"contact-list__item\" key={contact.id}>\r\n        <div className=\"contact-list__item-info\">\r\n        <span className=\"contact-list__item-name\">{contact.name}:</span>\r\n        <span className=\"contact-list__item-number\">{contact.number}</span>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          data-id={contact.id}\r\n          onClick={onHandleDelete}\r\n          className=\"contact-list__item-btn\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n.contact{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n}\r\n.contact-list__item {\r\n    display: flex;\r\n    border: 1px solid black;\r\n    border-radius: 4px;\r\n    margin-bottom: 5px;\r\n    padding: 10px 15px;\r\n    color: black;\r\n  }\r\n  .contact-list-item-enter {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n  .contact-list-item-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 250ms;\r\n  }\r\n  .contact-list-item-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  .contact-list-item-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n    transition: all 250ms;\r\n  }\r\n  .contact-list__item-ifo {\r\n    width: 320px;\r\n  }\r\n  .contact-list__item-name {\r\n    margin-right: 15px;\r\n  }\r\n  .contact-list__item-number {\r\n    margin-right: 15px;\r\n  }\r\n  .contact-list__item-btn {\r\n    display: inline-block;\r\n    font-weight: 500;\r\n    font-size: 15px;\r\n    line-height: 1.63;\r\n    color: white;\r\n    width: 70px;\r\n    padding: 2px 10px;\r\n    background-color: red;\r\n    cursor: pointer;\r\n    border: none;\r\n    border-radius: 4px;\r\n    outline: none;\r\n    margin-left: 10px;\r\n  }\r\n  .contact-list__item-btn:hover {\r\n    color: #fff;\r\n    background-color: red;\r\n    box-shadow: 7px 7px 12px 3px rgba(0, 0, 0, 0.42);\r\n    transition: 500ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n`;\r\n\r\nexport default Wrapper;","import React, {useEffect} from \"react\";\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\n\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport ContactListStyled from \"../ContactList/ContactListStyled\";\r\nimport { getContactOperation } from \"../../redux/operations/contactOperations\";\r\nimport { getFilter, getFilteredContacts } from \"../../redux/selectors/formSelectors\";\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const filter = useSelector(getFilter);\r\n\r\n  useEffect(() => {\r\n    dispatch(getContactOperation())\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <ContactListStyled>\r\n      <TransitionGroup component=\"ul\" className=\"contact-list\">\r\n        {contacts\r\n          .filter((contact) =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase())\r\n          )\r\n          .map((contact) => (\r\n            <CSSTransition\r\n              key={contact.id}\r\n              timeout={250}\r\n              classNames=\"my-contact-list-item\"\r\n            >\r\n              <ContactListItem contact={contact} />\r\n            </CSSTransition>\r\n          ))}\r\n      </TransitionGroup>\r\n    </ContactListStyled>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from 'styled-components';\r\n\r\nconst Wraper = styled.div`\r\ndisplay: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  overflow: hidden;\r\n  padding: 50px;\r\n  width: 432px;\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  margin: 0 auto;\r\n  box-shadow: 7px 5px 7px 5px rgba(140, 140, 140, 0.75);\r\n.phonebook-appear{\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n}\r\n.phonebook-appear-active{\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 500ms linear;\r\n}\r\n.phbook-title{\r\n    font-weight: 700;\r\n    font-size: 25px;\r\n    line-height: 1.63;\r\n    color: blue;\r\n    overflow: hidden;\r\n    margin-bottom: 20px;\r\n}\r\n.contacts-title{\r\n    text-align: center;\r\n    font-weight: 700;\r\n    font-size: 25px;\r\n    line-height: 1.63;\r\n    color: blue;\r\n    margin-bottom: 20px;\r\n}\r\n .notification-enter {\r\n    opacity: 0;\r\n    transform: translateX(100%);\r\n  }\r\n  .notification-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 250ms;\r\n  }\r\n  .notification-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  .notification-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(100%);\r\n    transition: all 250ms;\r\n  }\r\n  .filter-enter {\r\n    opacity: 0;\r\n    transform: translateX(-100%) translateY(-100%);\r\n  }\r\n  .filter-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0) translateY(0);\r\n    transition: all 250ms linear;\r\n  }\r\n  .my-filter-exit {\r\n    opacity: 1;\r\n  }\r\n  .filter-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(100%) translateY(-100%);\r\n    transition: all 250ms linear;\r\n  }\r\n  `;\r\nexport default Wraper;","import { React } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport ContactForm from \"../../component/ContactForm/ContactForm\"\r\nimport Filter from \"../../component/Filter/Filter\"\r\nimport ContactList from \"../../component/ContactList/ContactList\"\r\nimport ContactStyled from '../../component/App/AppStyled';\r\nimport { getContacts } from \"../../redux/selectors/formSelectors\";\r\n\r\nconst ContactPage = () => {\r\n    const contacts = useSelector(getContacts)\r\n    \r\n    return (\r\n                <ContactStyled>\r\n            \r\n        <CSSTransition in={true} timeout={500} appear={true} classNames=\"phonebook\">\r\n            <h2 className=\"phbook-title\">PhoneBook</h2>\r\n        </CSSTransition>\r\n            \r\n            <ContactForm />\r\n            \r\n            <h2 className=\"contacts-title\">Contacts</h2>\r\n            \r\n        <CSSTransition in={contacts.length > 1} timeout={250} appear={true} classNames=\"filter\" unmountOnExit>\r\n            <Filter />\r\n        </CSSTransition>\r\n            \r\n        <ContactList />\r\n      </ContactStyled>\r\n    );\r\n    \r\n}\r\n\r\nexport default ContactPage;","import styled from \"styled-components\";\r\nconst NotificationStyled = styled.div`\r\n  position: absolute;\r\n  top: 45px;\r\n  right: 45px;\r\n  max-width: 300px;\r\n  background-color: red;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  .notification-title {\r\n    text-align: center;\r\n    font-weight: 400;\r\n    font-size: 18px;\r\n    line-height: 1.63;\r\n    color: #ffffff;\r\n  }\r\n`;\r\nexport default NotificationStyled;","import React from \"react\";\r\nimport NotificationStyled from \"../Notification/NotificationStyled\";\r\n\r\nconst Notification = ({ notification }) => {\r\n  return (\r\n    <NotificationStyled>\r\n      <p className=\"notification-title\">{notification}</p>\r\n    </NotificationStyled>\r\n  );\r\n};\r\n\r\nexport default Notification;"],"sourceRoot":""}